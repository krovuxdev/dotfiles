
#################################
#          Animations           #
#################################
# requires https://github.com/jonaburg/picom
# (These are also the default values)
# transition-length = 300
# transition-pow-x = 0.1
# transition-pow-y = 0.1
# transition-pow-w = 0.1
# transition-pow-h = 0.1
size-transition = true
transition=true;
transition-step=0.02;
transition-offset=20;

transition-direction = "smart-x";
transition-timing-function = "ease-out-cubic";
transition-rule = [];


#################################
#             Shadows           #
#################################
# Enabled client-side shadows on windows. Note desktop windows
# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow,
# unless explicitly requested using the wintypes option.
#
# shadow = false
shadow = false;

# The blur radius for shadows, in pixels. (defaults to 12)
# shadow-radius = 12
shadow-radius = 8;

# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)
# shadow-opacity = .75

# The left offset for shadows, in pixels. (defaults to -15)
# shadow-offset-x = -15
shadow-offset-x = -7;

# The top offset for shadows, in pixels. (defaults to -15)
# shadow-offset-y = -15
shadow-offset-y = -7;

# Red color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-red = 0

# Green color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-green = 0

# Blue color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-blue = 0

# Hex string color value of shadow (#000000 - #FFFFFF, defaults to #000000). This option will override options set shadow-(red/green/blue)
# shadow-color = "#000000"

# Specify a list of conditions of windows that should have no shadow.
#
# examples:
#   shadow-exclude = "n:e:Notification";
#
# shadow-exclude = []
shadow-exclude = [
  "name = 'Notification'",
  "class_g = 'Conky'",
  "class_g = 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "class_g = 'firefox'",
  "class_g = 'Code'",
  "class_g = 'TelegramDesktop'",
  "class_g = 'Alacritty'",
  "class_g = 'kitty'",
  "class_g = 'Rofi'",
  "class_g = 'Peek'",
  "class_g = 'Eww'",
  # "class_g = 'telegram-desktop'",

  "_GTK_FRAME_EXTENTS@:c",
  "! name~=''"
  
];

# Specify a list of conditions of windows that should have no shadow painted over, such as a dock window.
# clip-shadow-above = []

# Specify a X geometry that describes the region in which shadow should not
# be painted in, such as a dock window region. Use
#    shadow-exclude-reg = "x10+0+0"
# for example, if the 10 pixels on the bottom of the screen should not have shadows painted on.
#
# shadow-exclude-reg = ""

# Crop shadow of a window fully on a particular Xinerama screen to the screen.
# xinerama-shadow-crop = false


#################################
#           Fading              #
#################################


# Fade windows in/out when opening/closing and when opacity changes,
#  unless no-fading-openclose is used.
# fading = false
fading = true;

# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)
# fade-in-step = 0.028
fade-in-step = 0.03;

# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)
# fade-out-step = 0.03
fade-out-step = 0.03;

# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)
fade-delta = 5

# Specify a list of conditions of windows that should not be faded.
fade-exclude = [
  "class_g = 'Rofi'",               # maim
  "class_g = 'Eww'",               # maim
  "class_g = 'TelegramDesktop'",

]

# Do not fade on window open/close.
# no-fading-openclose = true

# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.
# no-fading-destroyed-argb = false


#################################
#   Transparency / Opacity      #
#################################


# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
# inactive-opacity = 1
# inactive-opacity = 0.1;

# # Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
# # frame-opacity = 1.0
# # frame-opacity = 1;

# # Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.
# # inactive-opacity-override = true
# inactive-opacity-override = true;

# # Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
# active-opacity = 1.0;

# # Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
# # inactive-dim = 0.0

# # Specify a list of conditions of windows that should never be considered focused.
# # focus-exclude = []
# focus-exclude = [
#   "class_g = 'Cairo-clock'",
#   # "class_g = 'Bar'",                    # lemonbar
#   # "class_g = 'slop'",               # maim
#   # "class_g = 'kitty'",               # maim
#   "class_g = 'Rofi'",               # maim
#   "! name~=''"
  
# ];


# # focus-exclude = [ "class_g = 'Cairo-clock'" ];

# # Use fixed inactive dim value, instead of adjusting according to window opacity.
# # inactive-dim-fixed = 1.0

# # Specify a list of opacity rules, in the format `PERCENT:PATTERN`,
# # like `50:name *= "Firefox"`. picom-trans is recommended over this.
# # Note we don't make any guarantee about possible conflicts with other
# # programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
# # example:
# #    opacity-rule = [ "80:class_g = 'URxvt'" ];
# #
# # opacity-rule = []
# opacity-rule = [
#   "80:class_g     = 'Bar'",             # lemonbar
#   "100:class_g    = 'slop'",            # maim
#   "100:class_g    = 'XTerm'",
#   "100:class_g    = 'URxvt'",
#   "100:class_g    = 'kitty'",
#   "100:class_g    = 'Alacritty'",
#   "80:class_g     = 'Polybar'",
#   "98:class_g    = 'Code'",
#   "100:class_g    = 'Meld'",
#   "100:class_g     = 'TelegramDesktop'",
#   "100:class_g     = 'Joplin'",
#   "100:class_g    = 'firefox'",
#   "100:class_g    = 'discord'",
#   "100:class_g    = 'Thunderbird'",
#   "100:class_g    = 'Systrays'",
# ];

#################################
#           Corners             #
#################################

# Sets the radius of rounded window corners. When > 0, the compositor will
# round the corners of windows. Does not interact well with
# `transparent-clipping`.
corner-radius = 12;
# round-borders = 20;

# # Exclude conditions for rounded corners.
rounded-corners-exclude = [
#   "window_type = 'dock'",
#   "window_type = 'desktop'",
#   "class_g = 'awesome'",
#   "class_g = 'URxvt'",
#   "class_g = 'XTerm'",
#   #"class_g = 'kitty'",
#   "class_g = 'Alacritty'",
#   "class_g = 'Polybar'",
#   # "class_g = 'Code'",
#   "class_g = 'TelegramDesktop'",
#   "class_g = 'firefox'",
#   "class_g = 'Thunderbird'",
#   "class_g = 'Dunst'",
#   "class_g = 'Rofi'",
  "class_g = 'Eww'",
  "! name~=''", # BAR EN QTILE
  "class_g = 'Peek'",
];

#################################
#     Background-Blurring       #
#################################

# Parameters for background blurring, see the *BLUR* section for more information.
# blur-method = "dual_kawase"
# blur-strength = 4
# blur-size = 12
#
#

# Blur background of semi-transparent / ARGB windows.
# Bad in performance, with driver-dependent behavior.
# The name of the switch may change without prior notifications.
#
# blur-background = false

# Blur background of windows when the window frame is not opaque.
# Implies:
#    blur-background
# Bad in performance, with driver-dependent behavior. The name may change.
#
# blur-background-frame = false


# Use fixed blur strength rather than adjusting according to window opacity.
# blur-background-fixed = false


# Specify the blur convolution kernel, with the following format:
# example:
#   blur-kern = "5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1";
#
# blur-kern = ""
# blur-kern = "3x3box";
blur: {
  # method = "dual_kawase";
  # method = "gaussian";
  method = "dual_kawase";
  strength = 5;
  size = 12;
  # kernel = "11x11gaussian";
  # deviation = 1.0;
  background = false;
  background-frame = false;
  background-fixed = false;
  kern = "3x3box";
}

# # Exclude conditions for background blur.
# # blur-background-exclude = []
blur-background-exclude = [
  # "window_type = 'dock'",
  # "window_type = 'desktop'",
  # "_GTK_FRAME_EXTENTS@:c",
  # "class_g = 'Rofi'",
  "! name~=''", 
  "class_g = 'Eww'",

  "class_g = 'Peek'",
  "class_g = 'Emojimart'",
  "class_g = 'TelegramDesktop'",
];

#################################
#       General Settings        #
#################################

backend = "glx"
# backend = "xr_glx_hybrid"
# backend = "kawase"
# backend = "dual_kawase"
# backend = "xrender";
# daemon = false

# Enable/disable VSync.
# vsync = false
vsync = true;

# Enable remote control via D-Bus. See the *D-BUS API* section below for more details.
# dbus = false
# dbus = true

# Try to detect WM windows (a non-override-redirect window with no
# child that has 'WM_STATE') and mark them as active.
#
# mark-wmwin-focused = false
mark-wmwin-focused = true;

# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.
# mark-ovredir-focused = false
mark-ovredir-focused = true;

# Try to detect windows with rounded corners and don't consider them
# shaped windows. The accuracy is not very high, unfortunately.
#
# detect-rounded-corners = false
detect-rounded-corners = true;

# Detect '_NET_WM_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_OPACITY' of client windows to frame windows.
#
# detect-client-opacity = false
detect-client-opacity = true;

# Specify refresh rate of the screen. If not specified or 0, picom will
# try detecting this with X RandR extension.
#
# refresh-rate = 60
# refresh-rate = 0;

# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window,
# rather than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy,
# provided that the WM supports it.
#
# use-ewmh-active-win = true
# use-ewmh-active-win = false

# Unredirect all windows if a full-screen opaque window is detected,
# to maximize performance for full-screen windows. Known to cause flickering
# when redirecting/unredirecting windows.
#
# unredir-if-possible = false
# unredir-if-possible = true

# Delay before unredirecting the window, in milliseconds. Defaults to 0.
# unredir-if-possible-delay = 0

# Conditions of windows that shouldn't be considered full-screen for unredirecting screen.
# unredir-if-possible-exclude = []

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows
# in the same group focused at the same time.
#
# detect-transient = false
detect-transient = true;

# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same
# group focused at the same time. This usually means windows from the same application
# will be considered focused or unfocused at the same time.
# 'WM_TRANSIENT_FOR' has higher priority if detect-transient is enabled, too.
#
# detect-client-leader = false;
detect-client-leader = true;


# resize-damage = 1

# Specify a list of conditions of windows that should be painted with inverted color.
# Resource-hogging, and is not well tested.
#
# invert-color-include = []

# glx-no-stencil = false;
# glx-no-stencil = true;


# glx-no-rebind-pixmap = false;
# glx-no-rebind-pixmap = true;

# no-use-damage = true;
use-damage = false;

# Use X Sync fence to sync clients' draw calls, to make sure all draw
# calls are finished before picom starts drawing. Needed on nvidia-drivers
# with GLX backend for some users.
#
# xrender-sync-fence = false;
# xrender-sync-fence = true;

# GLX backend: Use specified GLSL fragment shader for rendering window contents.
# See `compton-default-fshader-win.glsl` and `compton-fake-transparency-fshader-win.glsl`
# in the source tree for examples.
#
# glx-fshader-win = ""

# Force all windows to be painted with blending. Useful if you
# have a glx-fshader-win that could turn opaque pixels transparent.
#
# force-win-blend = false;

# Do not use EWMH to detect fullscreen windows.
# Reverts to checking if a window is fullscreen based only on its size and coordinates.
#
# no-ewmh-fullscreen = false;

# Dimming bright windows so their brightness doesn't exceed this set value.
# Brightness of a window is estimated by averaging all pixels in the window,
# so this could comes with a performance hit.
# Setting this to 1.0 disables this behaviour. Requires --use-damage to be disabled. (default: 1.0)
#
# max-brightness = 1.0;

# Make transparent windows clip other windows like non-transparent windows do,
# instead of blending on top of them.
#
# transparent-clipping = false;
# transparent-clipping = true;

# log-level = "debug"
# log-level = "trace"
# log-level = "warn"
# log-level = "error"
log-level = "info";

# log-file = "/path/to/your/log/file"

# Show all X errors (for debugging)
# show-all-xerrors = false

# Write process ID to a file.
# write-pid-path = "/path/to/your/log/file"

# Window type settings
#
# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard:
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility",
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu",
#     "tooltip", "notification", "combo", and "dnd".
#
# Following per window-type options are available: ::
#
#   fade, shadow:::
#     Controls window-type-specific shadow and fade settings.
#
#   opacity:::
#     Controls default opacity of the window type.
#
#   focus:::
#     Controls whether the window of this type is to be always considered focused.
#     (By default, all window types except "normal" and "dialog" has this on.)
#
#   full-shadow:::
#     Controls whether shadow is drawn under the parts of the window that you
#     normally won't be able to see. Useful when the window has parts of it
#     transparent, and you want shadows in those areas.
#
#   clip-shadow-above:::
#     Controls wether shadows that would have been drawn above the window should
#     be clipped. Useful for dock windows that should have no shadow painted on top.
#
#   redir-ignore:::
#     Controls whether this type of windows should cause screen to become
#     redirected again after been unredirected. If you have unredir-if-possible
#     set, and doesn't want certain window to cause unnecessary screen redirection,
#     you can set this to `true`.
#
wintypes:
{
  splash = { blur-backround=true; }
  normal = { fade=true shadow=true; }
  tooltip = { fade = true blur=false shadow = true opacity = 1 focus = true full-shadow = false; };
  dock = { shadow = false; clip-shadow-above = true; }
  dnd = { shadow = false; }
  popup_menu = { opacity =1; shadow=false; }
  dropdown_menu = { opacity = 1; shadow = false;}
  utility = {opacity=1;}
  menu = {opacity=1; shadow=false}
};

